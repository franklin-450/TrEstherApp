@{
    Layout = null;
    var title = ViewData["Title"] ?? "Tr. Esther Tribute";
}
<!doctype html>
<html lang="en" data-theme="light">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <title>@title</title>

  <!-- Bootstrap 5 + Icons -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css" rel="stylesheet" />

  <!-- Fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600;700;800&display=swap" rel="stylesheet" />

  <style>
    :root{
      --accent-gold:#ffd700;
      --accent-blue:#0d6efd;
      --muted-light:#6c757d;
      --glass: rgba(255,255,255,0.06);
      --bg-dark-1:#020217;
      --bg-dark-2:#071233;
      --bg-light-1:#fffaf3;
      --bg-light-2:#e8f1ff;
      --max-width:1200px;
    }

    html,body{height:100%;margin:0;font-family:'Poppins',system-ui,-apple-system,Segoe UI,Roboto,Arial;}
    body{transition:background 0.9s ease,color 0.6s ease;overflow-y:auto;}

    /* THEME CLASSES */
    html[data-theme="light"] body{
      background: linear-gradient(120deg,var(--bg-light-1),var(--bg-light-2));
      color:#111827;
    }
    html[data-theme="dark"] body{
      background: radial-gradient(circle at 20% 10%, rgba(22,24,39,0.8), rgba(3,6,23,1) 40%), linear-gradient(180deg,var(--bg-dark-1),var(--bg-dark-2));
      color:#e6eef8;
    }

    /* NAV */
    .site-nav{position:fixed;left:0;right:0;top:0;z-index:1200;backdrop-filter:blur(6px);border-bottom:1px solid rgba(255,255,255,0.03)}
    .site-nav .container{display:flex;align-items:center;justify-content:space-between}
    .brand-title{font-weight:700;color:var(--accent-gold);letter-spacing:0.3px}

    /* Theme toggle button */
    .theme-btn{
      background:linear-gradient(90deg, rgba(255,255,255,0.06), rgba(255,255,255,0.02));
      border:1px solid rgba(255,255,255,0.04);
      width:48px;height:48px;border-radius:12px;display:flex;align-items:center;justify-content:center;
      color:inherit;font-size:1.15rem;
    }

    /* GLOBAL CONTAINER */
    .page-container{max-width:var(--max-width);margin:0 auto;padding:100px 20px 60px 20px;position:relative;z-index:5}

    /* HERO utilities */
    .hero {text-align:left; padding:64px 0 40px; }
    .hero .kicker{display:inline-block;padding:6px 12px;border-radius:999px;background:linear-gradient(90deg,var(--accent-gold),#ffb703);color:#08102a;font-weight:700}

    /* Cards and glass */
    .glass-card{background: linear-gradient(180deg, rgba(255,255,255,0.02), rgba(255,255,255,0.01));border-radius:14px;padding:20px;border:1px solid rgba(255,255,255,0.03);box-shadow:0 12px 40px rgba(2,6,23,0.45)}
    .accent-cta{background:linear-gradient(90deg,var(--accent-gold),#ffb703);color:#08102a;font-weight:700;border-radius:12px;padding:10px 18px;border:none}

    /* TIMELINE */
    .timeline{position:relative;padding-left:30px}
    .timeline::before{content:'';position:absolute;left:12px;top:0;bottom:0;width:3px;background:linear-gradient(180deg,var(--accent-gold), rgba(255,183,3,0.25));opacity:0.95;border-radius:2px}
    .timeline-item{position:relative;padding:10px 12px 20px 26px;margin-bottom:1.2rem}
    .timeline-item::before{content:'';position:absolute;left:6px;top:18px;width:14px;height:14px;border-radius:50%;background:var(--accent-gold);box-shadow:0 0 0 6px rgba(255,183,3,0.06)}

    /* GALLERY */
    .gallery-card img{border-radius:10px;height:220px;object-fit:cover;width:100%}

    /* LEGACY WALL */
    .legacy-grid .card{min-height:160px;border-radius:12px;overflow:hidden}

    /* SIGNATURE */
    .signature{font-family: 'Poppins', sans-serif;font-weight:700;font-size:1.05rem;color:var(--accent-gold);letter-spacing:0.6px}

    /* FOOTER */
    footer{padding:28px 0;text-align:center;color:rgba(255,255,255,0.7);margin-top:40px}

    /* AUDIO CONTROL (floating) */
    .audio-control{position:fixed;left:18px;bottom:18px;z-index:1400;background:var(--glass);border-radius:12px;padding:8px;display:flex;gap:8px;align-items:center;border:1px solid rgba(255,255,255,0.03)}
    .audio-control button{background:transparent;border:none;color:inherit;font-size:1.05rem}

    /* Nebula / Stars layers */
    #spaceScene{position:fixed;inset:0;pointer-events:none;z-index:0;overflow:hidden}
    #nebulaLayer{position:absolute;inset:0;filter:blur(80px) saturate(120%);opacity:0;transition:opacity 1s ease}
    #midNebula{position:absolute;inset:-10%}
    #starLayer{position:absolute;inset:0;opacity:0;transition:opacity 1s ease}

    /* particle for light */
    #lightParticles{position:absolute;inset:0;opacity:0;pointer-events:none;transition:opacity 1s ease}

    /* floating messages */
    .floating-msg{position:fixed;z-index:1500;font-weight:700;padding:10px 16px;border-radius:999px;background:linear-gradient(90deg,var(--accent-gold),#ffd36a);color:#08102a;box-shadow:0 8px 30px rgba(0,0,0,0.4);pointer-events:none;opacity:0;transform:translateY(30px);transition:opacity .6s, transform .6s}

    /* RESPONSIVE tweaks */
    @@media (max-width: 767.98px){
      .page-container{padding:110px 16px 40px 16px}
      .hero h1{font-size:1.8rem}
      .gallery-card img{height:160px}
    }
  </style>
</head>
<body>

  <!-- SPACE SCENE: nebula, mid nebula, star layer, light particles -->
  <div id="spaceScene" aria-hidden="true">
    <div id="nebulaLayer">
      <svg id="midNebula" preserveAspectRatio="none" viewBox="0 0 1600 900" style="width:120%;height:120%;">
        <defs>
          <radialGradient id="g1" cx="20%" cy="20%" r="60%">
            <stop offset="0%" stop-color="#4b0082" stop-opacity="0.55"/>
            <stop offset="50%" stop-color="#0f1724" stop-opacity="0.6"/>
            <stop offset="100%" stop-color="#000000" stop-opacity="1"/>
          </radialGradient>
        </defs>
        <rect width="1600" height="900" fill="url(#g1)"></rect>
      </svg>
    </div>

    <canvas id="starLayer"></canvas>
    <canvas id="lightParticles"></canvas>
  </div>

  <!-- NAV -->
  <nav class="site-nav">
    <div class="container px-3 py-2 d-flex align-items-center">
      <div class="d-flex align-items-center gap-3">
        <div class="brand-title"><i class="bi bi-star-fill"></i> Tr. Esther Tribute</div>
        <div class="text-muted small">— a token of gratitude</div>
      </div>

      <div class="d-flex align-items-center gap-2 ms-auto">
        <a class="btn btn-sm btn-link text-decoration-none text-light" href="/">Home</a>
        <a class="btn btn-sm btn-link text-decoration-none text-light" href="#journey">Journey</a>
        <a class="btn btn-sm btn-link text-decoration-none text-light" href="#gallery">Gallery</a>
        <a class="btn btn-sm btn-link text-decoration-none text-light" href="#legacy">Legacy Wall</a>

        <button id="themeToggle" class="theme-btn ms-2" aria-label="Toggle theme" title="Toggle theme">
          <i id="themeIcon" class="bi bi-moon-stars-fill" style="font-size:1.05rem"></i>
        </button>
      </div>
    </div>
  </nav>

  <!-- AUDIO CONTROLS -->
  <div class="audio-control" role="region" aria-label="Music controls">
    <button id="audioPlayBtn" class="btn" title="Play/Pause"><i id="audioPlayIcon" class="bi bi-volume-mute-fill"></i></button>
    <input id="audioVol" type="range" min="0" max="1" step="0.01" value="0.25" aria-label="Volume"/>
  </div>

  <!-- FLOATING MESSAGES (container) -->
  <div id="floatingMsgs"></div>

  <!-- PAGE CONTENT -->
  <div class="page-container">
    @RenderBody()
  </div>

  <footer>
    <div class="container">
      <small>© @DateTime.Now.Year — Built with gratitude by <strong>Wizard Franky</strong>. All rights reserved.</small>
    </div>
  </footer>

  <!-- Required Scripts: Bootstrap only (main behaviors) -->
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.3/dist/js/bootstrap.bundle.min.js"></script>

  <script>
    /***** THEME + AUDIO + PARTICLE ENGINE *****/
    (function(){
      const html = document.documentElement;
      const themeToggle = document.getElementById('themeToggle');
      const themeIcon = document.getElementById('themeIcon');
      const starCanvas = document.getElementById('starLayer');
      const lightCanvas = document.getElementById('lightParticles');
      const nebula = document.getElementById('nebulaLayer');
      const audio = new Audio('/audio/piano.mp3'); // place piano.mp3 in wwwroot/audio/
      const playBtn = document.getElementById('audioPlayBtn');
      const playIcon = document.getElementById('audioPlayIcon');
      const vol = document.getElementById('audioVol');
      const floatingMsgs = document.getElementById('floatingMsgs');

      // persistent theme
      let theme = localStorage.getItem('tr_theme') || 'light';
      html.setAttribute('data-theme', theme);
      if(theme === 'dark'){themeIcon.className='bi bi-moon-stars-fill'; nebula.style.opacity=1;} else {themeIcon.className='bi bi-sun-fill'; nebula.style.opacity=0;}

      // audio defaults
      audio.loop = true;
      audio.volume = parseFloat(vol.value);
      audio.muted = true; // required for autoplay with sound policies — we'll unmute on user interaction
      audio.play().catch(()=>{}); // try autoplay muted

      // play/pause toggle
      let audioPlaying = false;
      playBtn.addEventListener('click', (e)=>{
        if(!audioPlaying){
          audio.muted = false;
          audio.play();
          playIcon.className='bi bi-volume-up-fill';
          audioPlaying = true;
        } else {
          audio.pause();
          playIcon.className='bi bi-volume-mute-fill';
          audioPlaying = false;
        }
      });

      // volume control
      vol.addEventListener('input', ()=> audio.volume = parseFloat(vol.value));

      // theme toggle
      themeToggle.addEventListener('click', ()=>{
        theme = (theme === 'light') ? 'dark' : 'light';
        html.setAttribute('data-theme', theme);
        localStorage.setItem('tr_theme', theme);
        if(theme === 'dark'){
          themeIcon.className='bi bi-moon-stars-fill';
          nebula.style.opacity = 1;
          startStars();
          startNebula();
          fadeAudio(false);
          lightCanvas.style.opacity = 0;
        } else {
          themeIcon.className='bi bi-sun-fill';
          nebula.style.opacity = 0;
          stopStars();
          fadeAudio(true);
          lightCanvas.style.opacity = 1;
        }
      });

      // Audio fade helper
      function fadeAudio(fadeIn=true){
        const target = fadeIn ? parseFloat(vol.value) : 0.0;
        const step = fadeIn ? 0.02 : -0.02;
        if(fadeIn){ audio.muted = false; audio.play().catch(()=>{}); }
        let cur = audio.volume;
        const t = setInterval(()=>{
          cur = Math.min(1, Math.max(0, cur + step));
          audio.volume = cur;
          if((fadeIn && cur >= target) || (!fadeIn && cur <= 0)){
            clearInterval(t);
            if(!fadeIn) audio.pause();
          }
        }, 80);
      }

      // Floating message generator
      const messages = [
        "Thank you, Tr. Esther — your belief changed everything.",
        "You gifted more than a laptop — you gifted a future.",
        "Every line of code, a step toward value and purpose.",
        "From student to builder — your mentorship matters.",
        "This page is a living tribute to your kindness."
      ];
      function spawnFloating(){
        const el = document.createElement('div');
        el.className = 'floating-msg';
        el.style.left = (10 + Math.random()*80) + 'vw';
        el.style.opacity = 1;
        el.style.transform = 'translateY(0)';
        el.innerText = messages[Math.floor(Math.random()*messages.length)];
        document.body.appendChild(el);
        // animate upwards
        setTimeout(()=>{ el.style.opacity = 0; el.remove(); }, 9000);
      }
      setInterval(spawnFloating, 5000);

      /********** STARFIELD (canvas) **********/
      const ctx = starCanvas.getContext('2d');
      let stars = [], starAnim = null;
      function resizeCanvas(){
        starCanvas.width = window.innerWidth;
        starCanvas.height = window.innerHeight;
        lightCanvas.width = window.innerWidth;
        lightCanvas.height = window.innerHeight;
      }
      window.addEventListener('resize', resizeCanvas);
      resizeCanvas();

      function initStars(count=140){
        stars = [];
        for(let i=0;i<count;i++){
          stars.push({
            x: Math.random()*starCanvas.width,
            y: Math.random()*starCanvas.height,
            r: Math.random()*1.6 + 0.2,
            vy: Math.random()*0.6 + 0.15,
            tw: Math.random()*0.03 + 0.01
          });
        }
      }

      function drawStars(){
        ctx.clearRect(0,0,starCanvas.width,starCanvas.height);
        for(const s of stars){
          // twinkle
          s.r += Math.sin(Date.now()*s.tw)*0.002;
          ctx.beginPath();
          ctx.fillStyle = 'rgba(255,255,255,0.9)';
          ctx.arc(s.x, s.y, Math.max(0.1,s.r), 0, Math.PI*2);
          ctx.fill();
          s.y += s.vy;
          if(s.y > starCanvas.height + 10){ s.y = -10; s.x = Math.random()*starCanvas.width; }
        }
        starAnim = requestAnimationFrame(drawStars);
      }

      function startStars(){ initStars(180); if(!starAnim) drawStars(); starCanvas.style.opacity = 1; }
      function stopStars(){ if(starAnim) cancelAnimationFrame(starAnim); starAnim = null; ctx.clearRect(0,0,starCanvas.width,starCanvas.height); starCanvas.style.opacity = 0; }

      // Nebula subtle micro-animation
      function startNebula(){ nebula.style.transition = 'opacity 1s ease'; nebula.style.opacity=1; }
      function stopNebula(){ nebula.style.opacity=0; }

      // Light particles (gold)
      const lpCtx = lightCanvas.getContext('2d');
      let particles = [], lpAnim = null;
      function initParticles(count=60){
        particles = [];
        for(let i=0;i<count;i++){
          particles.push({
            x: Math.random()*lightCanvas.width,
            y: Math.random()*lightCanvas.height,
            r: Math.random()*2 + 0.6,
            vx: (Math.random()-0.5)*0.25,
            vy: - (Math.random()*0.2 + 0.02),
            alpha: Math.random()*0.6 + 0.2
          });
        }
      }
      function drawParticles(){
        lpCtx.clearRect(0,0,lightCanvas.width,lightCanvas.height);
        for(const p of particles){
          lpCtx.beginPath();
          lpCtx.fillStyle = 'rgba(255,215,0,'+p.alpha+')';
          lpCtx.arc(p.x,p.y,p.r,0,Math.PI*2);
          lpCtx.fill();
          p.x += p.vx; p.y += p.vy;
          if(p.y < -10){ p.y = lightCanvas.height + 10; p.x = Math.random()*lightCanvas.width; }
          if(p.x < -10) p.x = lightCanvas.width + 10;
          if(p.x > lightCanvas.width +10) p.x = -10;
        }
        lpAnim = requestAnimationFrame(drawParticles);
      }
      function startParticles(){ initParticles(70); if(!lpAnim) drawParticles(); lightCanvas.style.opacity=1; }
      function stopParticles(){ if(lpAnim) cancelAnimationFrame(lpAnim); lpAnim=null; lpCtx.clearRect(0,0,lightCanvas.width,lightCanvas.height); lightCanvas.style.opacity=0; }

      // initialize theme on load
      if(html.getAttribute('data-theme') === 'dark'){ startStars(); startNebula(); stopParticles(); fadeAudio(false); } else { stopStars(); stopNebula(); startParticles(); fadeAudio(true); lightCanvas.style.opacity = 1; }
    })();
  </script>
</body>
</html>
